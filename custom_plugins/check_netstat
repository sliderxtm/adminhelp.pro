#!/bin/bash

netstat=`which netstat 2>/dev/null`
bc=`which bc 2>/dev/null`

cmd_netstat="$netstat -na"

function help {
echo -e "\n\tThis plugin shows the socket stats, using the netstat external program.\n\tIt prints statistics: Number of socket \n$0:\n\t-c N\tSets the CRITICAL level for open sockets\n\t-w N\tSets the WARNING level\n"
	exit -1
}

# Ensuring we have the needed tools:
( [ ! -f $netstat ] || [ ! -f $bc ] ) && \
	( echo "ERROR: You must have netstat and bc installed in order to run this plugin" && exit -1 )

# Getting parameters:
while getopts "d:w:c:h" OPT; do
	case $OPT in
#		"d") disk=$OPTARG;;
		"w") warning=$OPTARG;;
		"c") critical=$OPTARG;;
		"h") help;;
	esac
done

# Adjusting the three warn and crit levels:
crit_value=`echo $critical | cut -d, -f1`
#crit_read=`echo $critical | cut -d, -f2`
#crit_written=`echo $critical | cut -d, -f3`

warn_value=`echo $warning | cut -d, -f1`
#warn_read=`echo $warning | cut -d, -f2`
#warn_written=`echo $warning | cut -d, -f3`


# Checking parameters:
#[ ! -b "/dev/$disk" ] && echo "ERROR: Device incorrectly specified" && help

  [ "$warn_value" == "" ] || \
  [ "$crit_value" == "" ] &&
	echo "ERROR: You must specify all warning and critical levels" && help

 [ "$warn_value" -ge  "$crit_value" ] && \
  echo "ERROR: critical levels must be highter than warning levels" && help

# Doing the actual check:
value=`$cmd_netstat | wc -l`

# Comparing the result and setting the correct level:
if [ "`echo "$value >= $crit_value" | bc`" == "1" ]; then
        msg="CRITICAL"
        status=2
else if [ "`echo "$value >= $warn_value" | bc`" == "1" ]; then
        	msg="WARNING"
        	status=1
     else
        msg="OK"
        status=0
     fi
fi

# Printing the results:
echo "$msg - Number of open socket = $value | 'sockets'=$value;"

# Bye!
exit $status
