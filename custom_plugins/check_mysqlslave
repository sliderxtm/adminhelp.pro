#!/bin/sh

cmd="mysql -u root"

slave_io=`$cmd -e "show slave status\G;" | grep Slave_IO_Running | awk '{print $2}'`
slave_sql=`$cmd -e "show slave status\G;" | grep Slave_SQL_Running | awk '{print $2}'`
Last_IO_Errno=`$cmd -e "show slave status\G;" | grep Last_IO_Errno | awk '{print $2}'`
Last_SQL_Errno=`$cmd -e "show slave status\G;" | grep Last_SQL_Errno | awk '{print $2}'`
Last_IO_Error=`$cmd -e "show slave status\G;" | grep Last_IO_Error | awk '{print $2}'`
Last_SQL_Error=`$cmd -e "show slave status\G;" | grep Last_SQL_Error | awk '{print $2}'`
Seconds_Behind_Master=`$cmd -e "show slave status\G;" | grep Seconds_Behind_Master | awk '{print $2}'`

warn_value=1800

# Comparing the result and setting the correct level:
if [ "$Last_IO_Errno" != "0" -o "$Last_SQL_Errno" != "0" -o "$slave_io" != "Yes" -o "$slave_sql" != "Yes" ]; then
        msg="CRITICAL: Last_IO_Error = $Last_IO_Error Last_SQL_Error=$Last_SQL_Error slave_io=$slave_io slave_sql=$slave_sql"
        status=2
    else if [ "`echo "$Seconds_Behind_Master >= $warn_value" | bc`" == "1" ]; then
        msg="WARNING Seconds_Behind_Master=$Seconds_Behind_Master"
        status=1
     else
        msg="OK"
        status=0
     fi
fi

# Printing the results:
echo "$msg"

# Bye!
exit $status
