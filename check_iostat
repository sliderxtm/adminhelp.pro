#!/bin/bash

iostat=`which iostat 2>/dev/null`
bc=`which bc 2>/dev/null`

cmd_iostat="$iostat -p ALL -d -k"

function help {
echo -e "\n\tThis plugin shows the I/O usage of the ALL disks, using the iostat external program.\n\tIt prints three statistics: Transactions per second (tps), Kilobytes read (KB_read) and and written (KB_written) \n\n$0:\n\t-c <tps>\tSets the CRITICAL level for tps\n\t-w <tps>\tSets the WARNING level for tps\n"
	exit -1
}

# Ensuring we have the needed tools:
( [ ! -f $iostat ] || [ ! -f $bc ] ) && \
	( echo "ERROR: You must have iostat and bc installed in order to run this plugin" && exit -1 )

# Getting parameters:
while getopts "d:w:c:h" OPT; do
	case $OPT in
#		"d") disk=$OPTARG;;
		"w") warning=$OPTARG;;
		"c") critical=$OPTARG;;
		"h") help;;
	esac
done

# Adjusting the three warn and crit levels:
crit_tps=`echo $critical | cut -d, -f1`
#crit_read=`echo $critical | cut -d, -f2`
#crit_written=`echo $critical | cut -d, -f3`

warn_tps=`echo $warning | cut -d, -f1`
#warn_read=`echo $warning | cut -d, -f2`
#warn_written=`echo $warning | cut -d, -f3`


# Checking parameters:
#[ ! -b "/dev/$disk" ] && echo "ERROR: Device incorrectly specified" && help

  [ "$warn_tps" == "" ] || \
  [ "$crit_tps" == "" ] &&
	echo "ERROR: You must specify all warning and critical levels" && help

 [ "$warn_tps" -ge  "$crit_tps" ] && \
  echo "ERROR: critical levels must be highter than warning levels" && help

# Doing the actual check:
tps=`$cmd_iostat | awk '{s=s+$2}; END {print s}'`
kbread=`$cmd_iostat | awk '{s=s+$5}; END {print s}'`
kbwritten=`$cmd_iostat | awk '{s=s+$6}; END {print s}'`


# Comparing the result and setting the correct level:
if [ "`echo "$tps >= $crit_tps" | bc`" == "1" ]; then
        msg="CRITICAL"
        status=2
else if [ "`echo "$tps >= $warn_tps" | bc`" == "1" ]; then
        	msg="WARNING"
        	status=1
     else
        msg="OK"
        status=0
     fi
fi

# Printing the results:
echo "$msg - I/O stats tps=$tps KB_read=$kbread KB_written=$kbwritten | 'tps'=$tps; 'KB_read'=$kbread; 'KB_written'=$kbwritten;"

# Bye!
exit $status
